

struct Vector2{
    float x;
    float y;
}

struct Body{
    Vector2 position;
    Vector2 velocity;
    float mass;
}

struct Player{
    Body body;
    float size;
}


Vector2 normalize(Vector2 v)
{
    float length=sqrt(v.x*v.x+v.y*v.y);
    return {v.x/length, v.y/length};
}

Vector2 add(Vector2 a, Vector2 b)
{
    return {a.x+b.x, a.y+b.y};
}

Vector2 multiply(Vector2 a, float b)
{
    return {a.x*b, a.y*b};
}


Player player={{{0,0}, {0,0}, 1}, 10};

Vector2 getInput()
{
    Vector2 input={0,0};
    if(getKey("a"))
        input.x-=1;
    if(getKey("d"))
        input.x+=1;

    if(getKey("w"))
        input.y+=1;
    if(getKey("s"))
        input.y-=1;

    return normalize(input);
}

Vector2 loopScreen(Vector2 position)
{
    while(position.x>240)
        position.x-=480;
    while(position.x<-240)
        position.x+=480;
    while(position.y>180)
        position.y-=360;
    while(position.y<-180)
        position.y+=360;
    return position;
}

void update()
{
    penSize(player.size);


    
    Vector2 input=getInput();
    player.body.velocity=add(player.body.velocity, multiply(input, 20));
    player.body.velocity=multiply(player.body.velocity, 0.9);

    player.body.position=add(player.body.position, multiply(player.body.velocity, 0.1));

    if(getKey("space"))
    {
        penColor(random(100,255), random(100,255), random(100,255));
    }

    moveTo(player.body.position.x, player.body.position.y);
    penUp();
    player.body.position= loopScreen(player.body.position);
    moveTo(player.body.position.x, player.body.position.y);
    penDown();


    if(getKey("c"))
        penClear();

    if(getKey("r"))
        player.size*=1.1;
    if(getKey("f"))
        player.size/=1.1;   


    float test=round(ceil(floor(abs(1))));
}

while(true)
{
    update();
}