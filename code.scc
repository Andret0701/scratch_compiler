struct Color{
    float r;
    float g;
    float b;
}

struct Vector2{
    float x;
    float y;
}

struct Body{
    Vector2 position;
    Vector2 velocity;
}

struct Player{
    Body body;
    Color color;
    float size;
}


Vector2 normalize(Vector2 v)
{
    float length=sqrt(v.x*v.x+v.y*v.y);
    return {v.x/length, v.y/length};
}

Vector2 add(Vector2 a, Vector2 b)
{
    return {a.x+b.x, a.y+b.y};
}

Vector2 multiply(Vector2 a, float b)
{
    return {a.x*b, a.y*b};
}


Player player={{{0,0}, {0,0}},{100,120,100}, 10};

Player randomPlayer()
{
    return {{{random(-240,240), random(-180,180)}, {random(-2,2), random(-2,2)}},{random(100,255), random(100,255), random(100,255)}, random(5,20)};
}

player=randomPlayer();


Player[] balls=Player[1000];
for(int i=0;i<#balls;i++)
{
    balls[i]=randomPlayer();
}

void drawPlayer(Player p)
{
    penSize(p.size);
    penColor(p.color.r, p.color.g, p.color.b);
    moveTo(p.body.position.x, p.body.position.y);
    penDown();
    penUp();
}


Vector2 getInput()
{
    Vector2 input={0,0};
    if(getKey("a"))
        input.x-=1;
    if(getKey("d"))
        input.x+=1;

    if(getKey("w"))
        input.y+=1;
    if(getKey("s"))
        input.y-=1;

    return normalize(input);
}

Vector2 loopScreen(Vector2 position)
{
    while(position.x>240)
        position.x-=480;
    while(position.x<-240)
        position.x+=480;
    while(position.y>180)
        position.y-=360;
    while(position.y<-180)
        position.y+=360;
    return position;
}



void drawBackground(Color color)
{
    penColor(color.r, color.g, color.b);
    penSize(1000);
    moveTo(0,0);
    penDown();
    penUp();
}



void update()
{
    drawBackground({0,0,0});


 
//    float input.x_
//    float input.y_
//    input.x_ = (float) 0
//    input.y_ = (float) 0
//    if (getKey*("a"))
//       input.x_ = (input.x_ - (float) 1)
//    if (getKey*("d"))
//       input.x_ = (input.x_ + (float) 1)
//    if (getKey*("w"))
//       input.y_ = (input.y_ + (float) 1)
//    if (getKey*("s"))
//       input.y_ = (input.y_ - (float) 1)
//    push input.y_
//    push input.x_
    
    Vector2 input=getInput();
    player.body.velocity=add(player.body.velocity, multiply(input, 20));
    player.body.velocity=multiply(player.body.velocity, 0.9);

    player.body.position=add(player.body.position, multiply(player.body.velocity, 0.1));

    if(getKey("space"))
    {
        player.color={random(100,255), random(100,255), random(100,255)};
    }

    player.body.position= loopScreen(player.body.position);
    




    drawPlayer(player);
    for(int i=0;i<#balls;i++)
    {
        balls[i].body.velocity=add(balls[i].body.velocity, multiply(normalize(add(player.body.position, multiply(balls[i].body.position, -1))), player.size));
        balls[i].body.position=add(balls[i].body.position, multiply(balls[i].body.velocity, 1/balls[i].size));
        //damping
        balls[i].body.velocity=multiply(balls[i].body.velocity, 0.99);
        balls[i].body.position= loopScreen(balls[i].body.position);
        drawPlayer(balls[i]);
    }


    if(getKey("c"))
        penClear();

    if(getKey("r"))
        player.size*=1.1;
    if(getKey("f"))
        player.size/=1.1;   


    float test=round(ceil(floor(abs(1))));
}

while(true)
{
    update();
}

